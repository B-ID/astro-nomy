---
import { Icons } from "@/icons";
import type { MenuItem } from "@/types";

import { Image } from "astro:assets";
import imgPlaceholder from "../assets/placeholder.webp";
import { cn } from "@/lib/utils";

type Props = {
  title: string;
  items: MenuItem[] | undefined;
};

const { title, items } = Astro.props;
---

<div id="" class="grid grid-cols-3 xl:grid-cols-4 py-8 gap-x-8 gap-y-6">
  <h3 class="text-foreground font-semibold col-span-3 xl:col-span-1">
    {title}
  </h3>
  <div
    class="col-span-3 grid sm:grid-cols-2 md:grid-cols-3 gap-6 sm:gap-y-7 lg:gap-x-7"
  >
    {
      items &&
        items.map((item) => (
          <a
            href={item.disabled ? null : item.href}
            class={cn(
              "group relative bg-background rounded-xl overflow-hidden card_border",
              item.disabled && "cursor-default"
            )}
          >
            <div class="relative bg-gray-100 pt-[60%] overflow-hidden">
              <div class="absolute inset-0 w-full h-full rounded-t-xl overflow-hidden">
                <Image
                  loading="eager"
                  src={imgPlaceholder}
                  alt={item.title}
                  class="absolute inset-0 w-full h-full"
                />
              </div>
            </div>
            <div class="py-3 px-4">
              <p class="text-sm font-medium text-foreground mb-1">
                {item.title}
              </p>
              <p class="text-xs font-medium text-muted-foreground">
                {item.description}
              </p>
              {item.disabled && (
                <p class="absolute z-10 top-3 right-3 text-foreground bg-gray-900 bg-opacity-35 rounded-full flex items-center justify-center p-1.5">
                  <span class="sr-only">Work on it actually!</span>
                  <Icons.wrenchSrewdriver className="size-6 text-white" />
                </p>
              )}
            </div>
          </a>
        ))
    }
  </div>
</div>
